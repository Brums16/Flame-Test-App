{"ast":null,"code":"var _jsxFileName = \"/home/chrisb/Coding/Personal Projects/flame-test-app/src/main.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [flameColorState, setFlameColorState] = useState({\n    color1: 'yellow',\n    color2: 'red'\n  });\n  const [currentElementState, setCurrentElementState] = useState('none');\n\n  // Note for future, setting state works a lot better as one object with 2 colors as properties, rather than changing 2 separate states onClick\n\n  const [mode, setMode] = useState('sandbox');\n  const flameColors = [{\n    name: 'Lithium',\n    symbol: 'Li',\n    color: {\n      color1: 'crimson',\n      color2: 'black'\n    }\n  }, {\n    name: 'Sodium',\n    symbol: 'Na',\n    color: {\n      color1: 'yellow',\n      color2: 'black'\n    }\n  }, {\n    name: 'Potassium',\n    symbol: 'K',\n    color: {\n      color1: 'mediumpurple',\n      color2: 'black'\n    }\n  }, {\n    name: 'Calcium',\n    symbol: 'Ca',\n    color: {\n      color1: 'orange',\n      color2: 'black'\n    }\n  }, {\n    name: 'Copper',\n    symbol: 'Cu',\n    color: {\n      color1: 'green',\n      color2: 'black'\n    }\n  }, {\n    name: 'Selenium',\n    symbol: 'Se',\n    color: {\n      color1: 'blue',\n      color2: 'black'\n    }\n  }];\n  const Button = () => {\n    return flameColors.map(element => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"element-button\",\n      onClick: () => mode === 'sandbox' ? setFlameColorState(element.color) : checkAnswer(element.name),\n      children: element.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this));\n  };\n  const checkAnswer = name => {\n    if (name === currentElementState) {\n      console.log('correct answer');\n    } else {\n      console.log('wrong answer');\n    }\n  };\n\n  /* calling the changeMode function makes way more sense, this way I can reset colours to default within the function, rather than just setting the state onclick\n  with an inline function when clicking the buttons.  also means I can just have one changemode function rather than two separate inline functions! */\n\n  const changeMode = () => {\n    mode === 'sandbox' ? setMode('test') : setMode('sandbox');\n    setFlameColorState({\n      color1: 'yellow',\n      color2: 'red'\n    });\n  };\n  if (mode === 'sandbox') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sandbox Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-grid\",\n          children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bunsen-div\",\n          children: [\"bunsen picture here, the colour will be \", flameColorState.color1, \" and \", flameColorState.color2, \" like this:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bunsen-flame\",\n            style: {\n              backgroundColor: `${flameColorState.color1}`,\n              border: `2px solid ${flameColorState.color2}`\n            },\n            children: \"Flame Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeMode,\n        children: \"Test yourself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  }\n  if (mode === 'test') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Yourself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-grid\",\n          children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bunsen-div\",\n          children: [\"bunsen picture here, the colour will be \", flameColorState.color1, \" and \", flameColorState.color2, \" like this:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bunsen-flame\",\n            style: {\n              backgroundColor: `${flameColorState.color1}`,\n              border: `2px solid ${flameColorState.color2}`\n            },\n            children: \"Flame Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bunsen-tube\",\n            children: \"abc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeMode,\n        children: \"Sandbox mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this);\n  }\n};\n_s(Main, \"L15+wecINWGfhiONi4yBu6qJMsg=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","flameColorState","setFlameColorState","color1","color2","currentElementState","setCurrentElementState","mode","setMode","flameColors","name","symbol","color","Button","map","element","className","onClick","checkAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","changeMode","style","backgroundColor","border","_c","$RefreshReg$"],"sources":["/home/chrisb/Coding/Personal Projects/flame-test-app/src/main.js"],"sourcesContent":["import './styles.css'\nimport React, {useState} from 'react'\n\n\n\n\nconst Main = () => {\n\nconst [flameColorState, setFlameColorState] = useState({color1: 'yellow', color2: 'red'}) \nconst [currentElementState, setCurrentElementState] = useState('none')\n\n// Note for future, setting state works a lot better as one object with 2 colors as properties, rather than changing 2 separate states onClick\n\nconst [mode, setMode] = useState('sandbox')\n\n\n\n\nconst flameColors = [\n    {\n        name: 'Lithium',\n        symbol: 'Li',\n        color: {color1: 'crimson',\n                color2: 'black'}               \n    },\n    {\n        name: 'Sodium',\n        symbol: 'Na',\n        color: {color1: 'yellow',\n                color2: 'black'}\n    },\n    {\n        name: 'Potassium',\n        symbol: 'K',\n        color: {color1: 'mediumpurple',\n                color2: 'black'}\n    },\n    {\n        name: 'Calcium',\n        symbol: 'Ca',\n        color: {color1: 'orange',\n                color2: 'black'}\n    },\n    {\n        name: 'Copper',\n        symbol: 'Cu',\n        color: {color1: 'green',\n                color2: 'black'}\n    },\n    {\n        name: 'Selenium',\n        symbol: 'Se',\n        color: {color1: 'blue',\n                color2: 'black'}\n    }\n]\n\n\nconst Button = () => {\n    return (\n        flameColors.map((element) => \n        <button className=\"element-button\" \n        onClick={() => mode === 'sandbox' ? setFlameColorState(element.color) : checkAnswer(element.name)}>{element.name}</button>\n    ))\n}\n\nconst checkAnswer = (name) => {\n    if (name === currentElementState){\n        console.log('correct answer')\n    }\n    else {\n        console.log('wrong answer')\n    }\n}   \n\n/* calling the changeMode function makes way more sense, this way I can reset colours to default within the function, rather than just setting the state onclick\nwith an inline function when clicking the buttons.  also means I can just have one changemode function rather than two separate inline functions! */\n\nconst changeMode = () => {\n    mode === 'sandbox' ? setMode('test') : setMode('sandbox')\n    setFlameColorState({color1: 'yellow', color2: 'red'})\n}\n\n\n\n\n\n\n\n\n\nif (mode === 'sandbox'){\n    return (\n        <div className = 'main'>\n            <h2>Sandbox Mode</h2>\n        <div className=\"main-grid\">\n            <div className=\"buttons-grid\">\n            <Button />\n            </div>\n            <div className=\"bunsen-div\">\n                bunsen picture here, the colour will be {flameColorState.color1} and {flameColorState.color2} like this:\n                <div className=\"bunsen-flame\" style={{backgroundColor: `${flameColorState.color1}`, border: `2px solid ${flameColorState.color2}`}}>\n                    Flame Color\n                </div>\n            </div>\n\n            \n        </div>\n        \n        <button onClick={changeMode}>Test yourself</button>\n\n        </div>\n    )}\n\nif (mode === 'test'){\n    return (\n        <div className = 'main'>\n            <h2>Test Yourself</h2>\n            <div className =\"main-grid\">\n            <div className =\"buttons-grid\">\n            <Button />\n            </div>\n            <div className =\"bunsen-div\">\n                bunsen picture here, the colour will be {flameColorState.color1} and {flameColorState.color2} like this:\n                <div className =\"bunsen-flame\" style={{backgroundColor: `${flameColorState.color1}`, border: `2px solid ${flameColorState.color2}`}}>\n                    Flame Color\n                </div>\n                <div className = \"bunsen-tube\">\n                    abc\n                </div>\n            </div>\n\n\n        </div>\n            <button onClick={changeMode}>Sandbox mode</button>\n        </div>\n        \n    )}\n\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}